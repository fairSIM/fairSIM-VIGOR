/*
This file is part of Free Analysis and Interactive Reconstruction
for Structured Illumination Microscopy (fairSIM).

fairSIM is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

fairSIM is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with fairSIM.  If not, see <http://www.gnu.org/licenses/>
*/

package org.fairsim.cameraplugin;

import javax.swing.JFrame;
import org.fairsim.controller.ServerGui;
import org.fairsim.sim_gui.PlainImageDisplay;

/**
 *
 * @author m.lachetta
 */
public class CameraServerGui extends javax.swing.JFrame implements ServerGui {
    private JFrame viewFrame;
    PlainImageDisplay view;
    private int viewWidth, viewHeight;
    private boolean refreshing;
    private CameraPlugin cp;
    /**
     * Creates new form CameraGui
     */
    public CameraServerGui(int width, int height, CameraPlugin cp) {
        initComponents();
        refreshing = false;
        initView(width, height);
        this.cp = cp;
        CameraServer.startCameraServer(this, cp);
    }
    
    void refreshView(int width, int height) {
        if (viewWidth != width || viewHeight != height) {
            refreshing = true;
            viewFrame.dispose();
            viewFrame = null;
            view = null;
            initView(width, height);
            viewFrame.toFront();
            refreshing = false;
        }
    }
    
    private void initView(int width, int height) {
        viewWidth = width;
        viewHeight = height;
        viewFrame = new JFrame("View");
        view = new PlainImageDisplay(viewWidth, viewHeight);
        viewFrame.add(view.getPanel());
        viewFrame.pack();
        viewFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (!refreshing) {
                    cp.shutdownThreads();
                    CameraServerGui.this.dispose();
                }
            }
        });
        viewFrame.setVisible(true);
    }
    /*
    PlainImageDisplay getView() {
        return view;
    }
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        serverTrace = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Camera Server");
        setSize(new java.awt.Dimension(500, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        startButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        startButton.setText("Start Acquisition");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        stopButton.setText("Stop Acquisition");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        serverTrace.setColumns(20);
        serverTrace.setRows(5);
        jScrollPane1.setViewportView(serverTrace);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(stopButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(stopButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        cp.startAcquisition();
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        cp.stopAcquisition();
    }//GEN-LAST:event_stopButtonActionPerformed
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cp.shutdownThreads();
        viewFrame.dispose();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea serverTrace;
    javax.swing.JButton startButton;
    javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void showText(String text) {
        serverTrace.append(text + "\n");
    }
}
